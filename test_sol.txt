# 명령 
단순명령 : <프로그램> + <내용>
복합명령 :  
결합명령 : <프로그램> + <옵션> + <내용>
프로그램을 구체화하는 역할

# 입력
stdin 표준입력
프롬포드를 통해서 입력되는 입력스트림

# 출력
stdout 표준출력
출력스트림

# git
협업할 때 쓰임
깃 상태 
- 수정 : 파일이 변경된 상태 (스테이징 -> 커밋)  파일이 수정되었지만 커밋하지 않은 상태
- 커밋 : 저장 (상태 체크 -> (수정) -> 스테이징 -> 커밋) 
데이터가 로컬 데이터베이스에 안전하게 저장된 상태. 스냅샷이 저장된 상태.
- 스테이지 : 스냅샷 찍어서 커밋할 준비가 된 상태 수정한 파일을 add하여 곧 커밋할 것이라고 표시한 상태

# uniq
중복된 문자열을 제거해서 보여주되, 인전합 중복 문자열만

# sort
정렬, 오름차순

# 절대경로
루트에서부터 시작

# 상대경로
현재 기준

Quiz 1.
1. 셸에서 "명령"의 세가지 의미를 서술하시오.
  1. 하나의 단어로 이름 붙여진 실행 가능한 프로그램. 셸 내장명령
  2. 단순 명령 - 프로그램 + 명령인수
  3. 결합 명령 -  단수 명령이 여러 개 있는거

/bin에 존재하는 파일 내용을 라인별로 한 화면에 나타나도록 출력하는 명령행은?
ls -l /bin | less

셸에서 파이프란?
한 명령어의 출력값을 다른 명령어의 입력값으로 보내는 역할을 한다.
두 명령 사이에 삽입하여 명령을 조합하는 역할을 한다.

현재 디렉터리에 존재하는 파일 수를 출력하시오.
ls -l | wc -l
  
/bin에 존재하는 파일 중 처음 5개만 골라 앞글자만 출력하시오
-> ls /bin | head -n 5 | cut -c 1

/etc/passwd 디렉터리에서 로그인하지 않은 경우의 갯수를 구하는 코드를 작성하시오.
-> grep nologin /etc/passwd | wc -l

/user/lib에서 파일의 개수를 알아내는 코드를 작성하시오.
-> ls -l/user/lib | cut -c1 | grep -v d | wc -l

grades 파일에서 이름의 마지막 글자만 추출했을 때 각 알파벳의 중복 개수를 세는 코드를 작성하시오.
-> cut -f2 grades | rev | cut -c1 | sort | uniq -c

현재 디렉터리에 100개의 .jpg 파일이 존재한다고 가정하자. 이 중 중복된 파일이 있는지 확인하는 코드를 작성하라. (md5sum 프로그램을 활용할 수 있음)
-> md5sum*.jpg | cut -f1-32 | sort | uniq -c | sort -nr | grep -v

sample.txt의 1번째 필드를 출력하되, 마지막 두 글자만 출력하시오.
sample.txt 예시: python Programming Python 2010 Lutz, Mark
출력값 예시: on
-> cut -f1 sample.txt | rev | cut -c-2 | rev

숫자를 기준으로 내림차순하는 명령을 단축하는 코드를 작성하시오. 
-> alias sortnum = "sort -nr"

셸의 역할 세 가지를 서술하시오.
 1. 패턴 매칭 평가(와일드카드 처리)
 2. 프로그램 명령 실행
 3. 파이프라인 처리

 셸이란 리눅스 커널과 사용자를 연결해주는 인터페이스이다. 사용자가 입력하는 명령을 읽고 해석하고 프로그램을 실행시킴

짝수로 끝나는 .jpg 파일 중 모음으로 시작하는 파일을 고르는 명령을 작성하시오. 
-> ls [aeiou]*[02468].jpg

절대경로와 상대경로를 서술하시오.
절대경로: 루트에서 시작. 슬래시로 시작한다.
상대경로: 현재 디렉터리에서 시작. 부모는 .., 현재는 .로 표현한다.

alias ls="ls -l"
쉐도잉. 동일한 프로그램으로 별명을 짓는 것. 기존 명령보다 우선 처리됨. 현재 셸에만 영향을 줌.
alisa ls="ls -l"
숫자를 기준으로 내림차순하는 명령을 단축하는 코드를 작성하시오.
-> alias sortnum="sort -nr"


/user/lib에서 파일의 개수를 알아내는 코드를 작성하시오.
-> ls -l /user/lib | cut -c1 |grep -v d | wc -l
: 디렉토리의 파일 및 디렉토리 목록을 자세히 나열 /  각 줄의 첫 번째 문자만 추출 /  추출된 문자 중에서 d를 포함하는 줄을 제외 /  선택되 줄의 개수 세어 출력

ls /bin: /bin 디렉토리에 있는 파일 목록을 나열합니다.
rev: 각 줄의 문자를 역순으로 변경합니다.
head -n 5: 결과에서 첫 5개의 줄만 선택합니다.
cut -c-2: 각 줄에서 첫 번째 문자와 두 번째 문자를 선택합니다.

ls /bin | rev | head - n 5 | cut -c-2

animals.txt에서 a를 XXX로 변경하시오.
tr a XXX < animals.txt

파일 animals.txt의 파일명을 mammals.txt로 변경하시오.
->mv animals.txt mammals.txt

현재 디렉토리에 숨겨진 파일 (혹은 디렉토리)을 포함한 전체 개수를 세시오.
->ls -a | wc -c

animals.txt에서 4번째 필드인 저자명 중 이름만 (성 제외) 모두 출력하시오.
cut -f4 animals.txt | cut -d, -f2


Lutz"가 4번째 열에 있을 경우 다음 명령어를 사용하여 "Lutz"를 출력할 수 있습니다:

bash
Copy code
cut -f4 animals.txt

echo hello world | grep '.$'
주어진 문자열에서 마지막에 있는 문자를 찾는 명령어

sample.txt의 1번쨰 필드를 출력하되, 마지막 두 글자만 출력하시오.
cut -f1 sample.txt | rev | cut -c-2 |rev
cut -f1 sample.txt | rev | cut -c-2 |rev

새로운 파일이 생성되었을 때 이 파일을 커밋하는 한 묶음의 코드를 작성하시오.
git status
git add sample.txt
git commit-m "add sample"

name.txt 4번째 월드 Lutz, Mark에서
 Lutz만 출력하기 (모든 last name만 가져오기)

 -cut -f4 animals.txt | cut -d, -f2 (o)

 /user/lib에서 파일의 개수를 알아내는 코드를 작성하시오.
 ls -l /user/lib | cut-c1 | grep -v d | wc -l
 ChatGPT
 주어진 명령어를 설명해드리겠습니다:

ls -l /usr/lib: /usr/lib 디렉토리의 파일 및 디렉토리 목록을 자세한 형식으로 출력합니다.
 cut -c1: 각 줄의 첫 번째 문자만 추출합니다.
 grep -v d: 'd'로 시작하는 줄(디렉토리를 나타내는 표시)을 필터링하여 제외합니다.
 wc -l: 결과의 행 수를 세어줍니다.
 이 명령어를 합치면 다음과 같습니다: /usr/lib 디렉토리의 파일 중에서 디렉토리를 제외하고, 파일의 첫 번째 문자가 'd'로 시작하지 않는 파일의 수를 세어줍니다.

 이러한 작업은 보통 특정 디렉토리에 있는 파일 중에서 일반 파일의 수를 세는 데 사용될 수 있습니다.

 cut -f2 grades | rev | cut -c1 | sort | uniq -c 
 => 두번째 필드 이름중에서 마지막 글자 추출

 sample.txt의 1번쨰 필드를 출력하되, 마지막 두글자만 출력하시오.
 cut -f1 sample.txt | rev | cut -c-2 | rev

 animals.txt에서 4번째 필드인 저장명 중 이름만(성제외) 모두 출력하시오.
 cut -f4 animals.txt | cut -d, -f2

 변수 USER 값을 출력하시오.
 printenv USER

 alias ls = "ls -l"
 쉐도잉. 동일한 프로그램으로 별명을 짓는것.

 숫자를 기준으로 내림차순하는 명령을 단축하는 코드를 작성하시오.
 alias sortnum="sort -nr"

 alias sortnum="sort -n" => 오름차순(작은 수부터)

 product2="$HOME/Company/Department Y/Team B/Product 2"
 cd $product2

 짝수로 끝나는 .jpg파일 중 모음으로 시작하는 파일을 고르는 명령을 작성하시오,
 ls[aeiou]*[02468].jpg

 Q3. /etc 디렉터리 안에 파일 확장자가 .conf인 파일 목록 조회하기
  ls /etc/*.conf

grades 파일에서 이름의 마지막 글자만 추출했을 떄 알파벳의 중복 개수를 세는 코드를 작성하시오
cut -f2 grades | rev | cut -c1 | sort | uniq -c

/bin에 존재하는 파일 중 마지막 5개만 골라 앞 두글자까지만 출력하시오.
ls /bin | rev | head -5 | cut -c-2

최근 15개의 명령 히스토리를 history15에 저장하는 커맨드라인을 작성하라.
history 15 > history15

abba
'\(a\)\(b\)\2\1'

모든 글자 매칭:
.*
#으로 시작하는 문장 매칭:
^#.*

대문자로 시작하지 않는 문장 매칭:
^[^A-Z].*

 1, $s/[A-Z]/+/g
  전체 텍스트에서 대문자 알파벳을 모두 '+' 문자로 대체하는 것

  1, $s/[aeiouAEIOU]//g
  모음 지우기

  파일을 삭제할 떄 재확인하는 프로세스를 rm으로 지정하는 커맨드라인을 작성하라.
  alias rm="rm -i"
  이전 명령의 글자 수를 세어라
  !! | wc -c
  14번 명령 히스토리를 읽는 방법은?
  !14

  cat class* > student_list

  /etc/passwd 디렉터리에서 로그인하지 않은 경우의 갯수를 구하는 코드를 작성하시오.
  grep nologin /etc/passwd | wc -l

  디렉토리를 조회하는 커맨드라인을 작성하라.
  ls" "

  animals.txt에서 a를 XXX로 변경하시오.
  tr a XXX < animals.txt

  파일 animals.txt의 파일명을 mammals.txt로 변경하시오.
  mv animals.txt mammals.txt

  현재 디렉토리에 숨겨진 파일을 포함한 전체 개수를 세시오.
  ls -a | wc -l

grades파일을 내림차순하여 동일한 이름으로 저장하시오.
sort -nr grades -o grades

grades에서 A를 삭제하시오.
tr -d A < grades

현재 디렉토리에서 대문자로 시작하는 파일/디렉토리 이름을 dir.txt에 저장하라. 오류도 함께.
ls [A-Z]*2>dir.txt

현재 디렉토리에서 확장자가 세 자리 수인 파일을 검색하라
ls *.???

현재 디렉토리를 영어로 2가지 이상 쓰시오.
working directory, current directory

파일 sample.sh,sample.txt를 하위 디렉토리인 tmp파일로 옮기시오.
mv sample.*/tmp

note/w5.txt를 현재 디렉토리로 복사하시오.
cp note/w5.txt. 

animals.txt에서 a를 "XXX"로 변경하시오.
tr a XXX < animals.txt

파일 animals.txt의 파일명을 mammals.txt로 변경하시오.
mv animals.txt mammals.txt

현재 디렉토리에 숨겨진 파일 (혹은 디렉토리)을 포함한 전체 개수를 세시오.
ls -a | wc -l

ls로 파일을 조회하면 어떤 결과물이 반환되는가?
파일명이 그대로 반환된다.

grades 파일을 내림차순하여 동일한 이름으로 저장하시오.
sort -r grades -o grades
